/**
 * ---- user-select ----
 */
.select-none {
  user-select: none;
}

/**
* ---- font-style ----
*/
.italic {
  font-style: italic;
}

/**
* ---- text-align ----
*/
.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.text-center {
  text-align: center;
}

.text-justify {
  text-align: justify;
}

/**
*---- box-sizing ----
*/
.border-box {
  box-sizing: border-box;
}

/**
* ---- Display ----
*/
.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

/**
*---- overflow ----
*/
.hidden {
  overflow: hidden;
}

/**
* ---- Text ----
*/
.nowrap {
  white-space: nowrap;
}

/**
* ---- Flex ----
*/
.flex {
  display: flex;
}

.flex-wrap {
  display: flex;
  flex-wrap: wrap;
}

.flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

.flex-jcsb-aic {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.flex-jcfe-aic {
  display: flex;
  justify-content: flex-end;
  align-items: center;
}

.flex-jcfs-aic {
  display: flex;
  justify-content: flex-start;
  align-items: center;
}

.flex-jcfs-aifs {
  display: flex;
  justify-content: flex-start;
  align-items: flex-start;
}

.flex-jcfs-aife {
  display: flex;
  justify-content: flex-start;
  align-items: flex-end;
}

.flex-jcc-aifs {
  display: flex;
  justify-content: center;
  align-items: flex-start;
}

.flex-jcc-aife {
  display: flex;
  justify-content: center;
  align-items: flex-end;
}

.flex-jcsb-aifs {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
}

.flex-jcsb-aife {
  display: flex;
  justify-content: space-between;
  align-items: flex-end;
}

.flex-jcsa-aic {
  display: flex;
  justify-content: space-around;
  align-items: center;
}

.flex-column {
  flex-direction: column;
}

.flex-row {
  flex-direction: row;
}

.flex-as-asfe {
  align-self: flex-end;
}

.grow {
  flex-grow: 1;
}

.shrink {
  flex-shrink: 0;
}

@for $i from 1 through 5 {
  .pad-#{$i} {
    padding: #{$i}px;
  }

  .pad-l-#{$i} {
    padding-left: #{$i}px;
  }
  .pad-r-#{$i} {
    padding-right: #{$i}px;
  }
  .pad-t-#{$i} {
    padding-top: #{$i}px;
  }
  .pad-b-#{$i} {
    padding-bottom: #{$i}px;
  }
  .pad-lr-#{$i} {
    padding-left: #{$i}px;
    padding-right: #{$i}px;
  }
  .pad-tb-#{$i} {
    padding-top: #{$i}px;
    padding-bottom: #{$i}px;
  }
}

@for $i from 1 through 20 {
  .pad-#{$i * 5} {
    padding: $i * 5px;
  }
  .pad-l-#{$i * 5} {
    padding-left: $i * 5px;
  }
  .pad-r-#{$i * 5} {
    padding-right: $i * 5px;
  }
  .pad-t-#{$i * 5} {
    padding-top: $i * 5px;
  }
  .pad-b-#{$i * 5} {
    padding-bottom: $i * 5px;
  }
  .pad-lr-#{$i * 5} {
    padding-left: $i * 5px;
    padding-right: $i * 5px;
  }
  .pad-tb-#{$i * 5} {
    padding-top: $i * 5px;
    padding-bottom: $i * 5px;
  }
}

/**
* ---- margin ----
*/
.mar {
  margin: 0;
}
.mar-lr-auto {
  margin: 0 auto;
}
@for $i from 1 through 5 {
  .mar-#{$i} {
    margin: #{$i}px;
  }

  .mar-l-#{$i} {
    margin-left: #{$i}px;
  }
  .mar-r-#{$i} {
    margin-right: #{$i}px;
  }
  .mar-t-#{$i} {
    margin-top: #{$i}px;
  }
  .mar-b-#{$i} {
    margin-bottom: #{$i}px;
  }

  .mar-lr-#{$i} {
    margin-left: #{$i}px;
    margin-right: #{$i}px;
  }

  .mar-tb-#{$i} {
    margin-top: #{$i}px;
    margin-bottom: #{$i}px;
  }
}

@for $i from 1 through 20 {
  .mar-#{$i * 5} {
    margin: $i * 5px;
  }
  .mar-l-#{$i * 5} {
    margin-left: $i * 5px;
  }
  .mar-r-#{$i * 5} {
    margin-right: $i * 5px;
  }
  .mar-t-#{$i * 5} {
    margin-top: $i * 5px;
  }
  .mar-b-#{$i * 5} {
    margin-bottom: $i * 5px;
  }
  .mar-lr-#{$i * 5} {
    margin-left: $i * 5px;
    margin-right: $i * 5px;
  }
  .mar-tb-#{$i * 5} {
    margin-top: $i * 5px;
    margin-bottom: $i * 5px;
  }
}

@for $i from 1 through 9 {
  .w-#{$i * 5} {
    width: $i * 5px;
  }
}

@for $i from 1 through 10 {
  .w-#{$i * 50} {
    width: $i * 50px;
  }

  .ls-#{$i} {
    letter-spacing: $i * 1px;
  }

  .z-#{$i} {
    z-index: $i;
  }
}

@for $i from 8 through 100 {
  .fs-#{$i} {
    font-size: $i * 1px;
  }

  .lh-#{$i} {
    line-height: $i * 1px;
  }
}

/**
* ---- position ----
*/
.relative {
  position: relative;
}

.absolute {
  position: absolute;
}

.fixed {
  position: fixed;
}

/**
* ---- width ----
*/

.w-100vw {
  width: 100vw;
}

.w-100p {
  width: 100%;
}

/**
* ---- height ----
*/
.h-100p {
  height: 100%;
}

.h-100vh {
  height: 100vh;
}

.wh-100p {
  width: 100%;
  height: 100%;
}

.bold {
  font-weight: bold;
}

/**
* ---- cursor ----
*/
.pointer {
  cursor: pointer;
}

/**
* ---- ellipsis ----
*/
.text-one-ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 1;
  -webkit-box-orient: vertical;
  word-wrap: normal;
}

.text-two-ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  word-wrap: break-word;
}

.ios-bottom {
  padding-bottom: constant(safe-area-inset-bottom);
  padding-bottom: env(safe-area-inset-bottom);
}

/**
* ---- overflow ----
*/

.scroll-y {
  overflow-y: scroll;
}

.scroll-x {
  overflow-x: scroll;
}

/*单行溢出，超出部分显示...或者截取。前提必须有宽度*/

.text-overflow-hidden {
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}

/**
* ---- overflow ----
*/

.bgc-stre {
  background-size: 100% 100%;
}

/**
* ---- pointer-events ----
*/
.pe-no {
  pointer-events: none;
}

.pe-a {
  pointer-events: all;
}

/**
* ---- keyframes ----
*/

@keyframes heartbeat {
  from {
    transform: scale(1);
    opacity: 0.8;
  }
  to {
    transform: scale(1.2);
  }
}

.heartbeat {
  animation: 0.3s linear infinite alternate heartbeat;
}

.sim-sun {
  font-family: SimSun;
}

/**
* ---- font color ----
*/

.white {
  color: white;
}

.gradient {
  background-image: -webkit-linear-gradient(40deg, #f7ca6a, #fefdda, #fef8ae, #f6c76a);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

.gradient1 {
  background-image: -webkit-linear-gradient(40deg, #ffe9b8, #fffff7, #fffcda, #ffe5b0);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

.contain {
  object-fit: contain;
}

.text-shadow {
  filter: drop-shadow(0px 0px 1px rgba(0, 0, 0, 0.7));
}

/**
* ---- font color ----
*/

.filter-invert {
  filter: invert(1);
}

.transparent {
  opacity: 0;
}
